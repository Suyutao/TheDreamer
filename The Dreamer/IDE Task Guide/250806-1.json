{
  "title": "功能实现指南",
  "version": "250806-1",
  "projectOverview": {
    "name": "The Dreamer",
    "targetUsers": "中国大陆高中生，日常使用",
    "coreObjective": "通过数据分析实现学习的自由、秩序与自我掌控",
    "developmentCycle": "利用AI加速，预计1-2天完成各Phase"
  },
  "architecturePrinciples": {
    "techStack": ["SwiftUI", "SwiftData", "Swift Charts"],
    "targetSDK": "iOS 26",
    "architecturePattern": "MV (Model-View)",
    "codeOrganization": "严格按职责划分目录 (Models/, Views/, Components/, Utils/)",
    "buildTest": "xcodebuild -project The Dreamer.xcodeproj -scheme The Dreamer -destination platform=iOS Simulator,name=iPhone 16 Pro clean build"
  },
  "phases": [
    {
      "name": "Phase 1: 交互修复与数据安全",
      "priority": "高优先级",
      "objective": "修复点击区域、分数错误、删除安全机制",
      "estimatedTime": "1-2天",
      "tasks": [
        {
          "id": 1,
          "title": "修复科目和考试组管理点击区域",
          "status": "[x]",
          "owner": "@UI/UX设计师",
          "description": "解决点击空白区域无法打开的问题，扩大点击响应区域",
          "steps": [
            {
              "step": "检查 ManageSubjectsView 和 ExamGroupManagementView 的点击事件",
              "subtasks": [
                "确认当前使用 NavigationLink 或 Button 的点击区域限制",
                "将点击事件从文字/图表部分扩展到整个列表项"
              ]
            },
            {
              "step": "优化列表项布局",
              "subtasks": [
                "使用 .contentShape(Rectangle()) 扩展点击区域",
                "确保整行都可点击，包括空白区域"
              ]
            },
            {
              "step": "测试交互响应",
              "subtasks": [
                "验证所有列表项的点击响应",
                "确保无障碍功能正常工作"
              ]
            }
          ],
          "acceptanceCriteria": [
            "任意位置点击列表项都能正常响应",
            "不影响现有的拖拽和滑动操作",
            "编译通过，无运行时错误"
          ]
        },
        {
          "id": 2,
          "title": "修复数学考试分数错误",
          "status": "[ ]",
          "owner": "@程序员",
          "description": "解决120分变成150分的显示或存储错误",
          "steps": [
            {
              "step": "检查 AddDataView 的分数输入逻辑",
              "subtasks": [
                "确认 TextField 的绑定值是否正确",
                "检查数据类型转换 (String to Double)"
              ]
            },
            {
              "step": "验证数据存储过程",
              "subtasks": [
                "检查 Exam 模型的 totalScore 赋值",
                "确认 SwiftData 存储前后数值一致性"
              ]
            },
            {
              "step": "添加输入验证",
              "subtasks": [
                "限制输入为数字和小数点",
                "添加最大值检查 (如不超过999)"
              ]
            }
          ],
          "acceptanceCriteria": [
            "120分输入后正确显示为120分",
            "其他科目分数不受影响",
            "历史数据检查无异常"
          ]
        }
      ]
    }
  ],
  "developmentGuidelines": {
    "codeQuality": [
      "避免技术债: 第一次就做对，不留后患",
      "充分测试: 每个功能完成后立即编译测试",
      "代码复用: 优先使用现有组件，必要时创建新的可复用组件"
    ],
    "userExperience": [
      "效率优先: 每个操作都要快速、直观",
      "无干扰: 避免弹窗，使用禁用按钮等方式提供反馈",
      "数据安全: 确保用户数据不会意外丢失"
    ],
    "technicalImplementation": [
      "SwiftData优先: 充分利用SwiftData的关系和查询能力",
      "SwiftUI原生: 使用SwiftUI的最佳实践，避免UIKit混用",
      "性能考虑: 大数据量时注意查询优化和UI响应性"
    ],
    "testingAcceptance": [
      "编译测试: 每个任务完成后必须编译通过",
      "功能测试: 验证核心功能正常工作",
      "边界测试: 测试极端情况和错误处理"
    ]
  },
  "milestones": [
    {
      "phase": "Phase 1",
      "status": "[ ]",
      "description": "交互修复完成，数据安全机制到位"
    },
    {
      "phase": "Phase 2",
      "status": "[ ]",
      "description": "高级交互功能实现，OnBoarding上线"
    },
    {
      "phase": "Phase 3",
      "status": "[ ]",
      "description": "细节优化完成，准备提交App Store"
    }
  ],
  "finalGoal": "打造一个真正服务于学生的、高效的、有洞察力的学习数据分析工具",
  "note": "本指南基于250806-1需求整理，重点解决用户反馈的交互问题和数据安全问题"
}
